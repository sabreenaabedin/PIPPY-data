<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ingrWords' inline='true' name='federated.0a6oa1v05lyz5118pr0r917vzydz' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ingrWords' name='textscan.07okw170tn8q2f17aiiw5008xzqk'>
            <connection class='textscan' directory='C:/Users/Student/Documents/GitHub/PIPPY-data' filename='ingrWords.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07okw170tn8q2f17aiiw5008xzqk' name='ingrWords.csv' table='[ingrWords#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='word' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ingrWords.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[ingrWords.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[ingrWords.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>word</remote-name>
            <remote-type>129</remote-type>
            <local-name>[word]</local-name>
            <parent-name>[ingrWords.csv]</parent-name>
            <remote-alias>word</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Word' datatype='string' name='[word]' role='dimension' type='nominal' />
      <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501374' measure-ordering='alphabetic' measure-percentage='0.498626' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:word:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;american&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;bean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;bow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;canyon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;coconut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;easter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;flax&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hairy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ivy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;leaves&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;mango&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;needle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pistachio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;red&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;spotted&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;thistle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;violet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;wood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;acai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;baby&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;blade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;cactus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;chestnut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;daisy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;eyed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;goji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hops&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kiwi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lotus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;mosquito&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;olive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;perennial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;prickly&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;silky&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;swallow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tulip&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;western&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;aloe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bank&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;blue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cancer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;clove&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;duck&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;grapefruit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;land&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mahogany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mulberry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;orchid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;radical&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;sacred&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;spanish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tansy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;varnish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wild&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;apple&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;annie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;berry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;buffalo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;carolina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cork&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;english&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;france&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;heavens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;jerusalem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;lettuce&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;meadow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;night&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;passion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;poison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;river&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;scotch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;stem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;toes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;yam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;amy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;bear&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;box&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cap&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;coffee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;eastern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;jack&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;leek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;maple&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;neem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;palm&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;plague&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;redwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sauce&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;spring&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;thousand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;woody&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;algae&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;barbara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;blueberry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;candelilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;clover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dwarf&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;fever&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;grass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ink&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;laurel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;maid&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;mustard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;oxford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rapeseed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;safflower&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;species&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tassel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;velvet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;willow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;cabbage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;champion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;cucumber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;extract&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;giant&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;holly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;kimberly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;live&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;moringa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;oat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;penny&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;powder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;rose&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sharp&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sunflower&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tread&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wayside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;acid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;balm&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;blend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;california&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;christmas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;damask&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;fair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;golden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;horse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;korean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;moss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;olives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;petty&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;primrose&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;running&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;silver&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sweet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;umbrella&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wheat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;arizona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bitter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;butterfly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;chain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;creeping&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;evening&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;garden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;herb&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;juice&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;moose&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;nose&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pear&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;poppy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;roman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;seed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sugarcane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;touch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wax&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;algerian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;bark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;blunt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dye&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;field&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;lavender&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;maize&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;native&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pacific&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pineapple&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;raspberry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;saffron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;speckled&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;vine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wineberry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;annual&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;betty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;bull&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;carrot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;corn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;enzymes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fringed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hedge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;jewel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;licorice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mesquite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;nile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;poke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;robin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;scrambled&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;strawberry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;tomato&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wall&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;yellow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;apricot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;birch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bush&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cart&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cotton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;eucalyptus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fruit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;hemp&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;jojoba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;lilac&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;milk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;nodding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;peach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pomegranate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;rock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;scrub&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;striped&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;tongue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;walnut&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ylang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ash&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;bittersweet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;buttons&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;chamomile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;crocus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;evergreen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;garlic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hip&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;juniper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;linseed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;morel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;oak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pennsylvania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;potato&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;root&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sesame&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;summer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;track&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;waxes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;avocado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;blackberry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cabinet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cherry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cursed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;eye&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;glory&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;king&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;morning&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;oil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pepper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;prairie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rosemary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;shea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;susan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tree&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;weed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;almond&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;beech&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;brilliant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cape&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;colic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;eggs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;flower&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;headed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;japanese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;lemon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;marigold&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;paper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;plant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rhubarb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;scarlet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;squalane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;thyme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vitamin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;wormwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;boston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;canoe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cocoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;earth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;green&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;isle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;leaf&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;malic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;necklace&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;paintbrush&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pink&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;raw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;sage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;spice&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;thin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;viola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;winter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;agave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bamboo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bloom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;camellia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cinnamon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dandelion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;false&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;goose&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;horsetail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kudzu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;mother&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;onion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pigeon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;purple&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rush&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;soft&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sword&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;whiskey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;argan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;butter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;cells&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;cranberry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;european&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fuchsia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;joy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lily&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;milky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;northern&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;peanut&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;poor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rocket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;seal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sugar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;tooth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;water&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;angel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;belle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;brown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;carnauba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;common&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;elegant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;foot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;healing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;jasmine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;leopard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;marina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;nettle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;parsley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;plants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;scented&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;star&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;tobacco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;voodoo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wound&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;african&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;banana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;blooming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;climbing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;deadly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fennel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;grape&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hyaluronic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;lace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;magnolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;mountain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;orange&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pigment&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;queen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rye&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;softly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;vanilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;white&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='ingrWords' name='federated.0a6oa1v05lyz5118pr0r917vzydz' />
          </datasources>
          <datasource-dependencies datasource='federated.0a6oa1v05lyz5118pr0r917vzydz'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
            <column-instance column='[word]' derivation='Count' name='[pcdf:cnt:word:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0a6oa1v05lyz5118pr0r917vzydz].[Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column caption='Word' datatype='string' name='[word]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a6oa1v05lyz5118pr0r917vzydz].[none:word:nk]'>
            <groupfilter function='level-members' level='[none:word:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0a6oa1v05lyz5118pr0r917vzydz].[none:word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a6oa1v05lyz5118pr0r917vzydz].[none:word:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a6oa1v05lyz5118pr0r917vzydz].[pcdf:cnt:word:qk]</rows>
        <cols>[federated.0a6oa1v05lyz5118pr0r917vzydz].[tmn:Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card param='[federated.0a6oa1v05lyz5118pr0r917vzydz].[none:word:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0a6oa1v05lyz5118pr0r917vzydz].[none:word:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a6oa1v05lyz5118pr0r917vzydz].[none:word:nk]</field>
            <field>[federated.0a6oa1v05lyz5118pr0r917vzydz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
